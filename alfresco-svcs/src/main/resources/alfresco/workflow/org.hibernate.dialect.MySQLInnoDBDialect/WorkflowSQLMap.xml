<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL MAP 2.0//EN"
        "http://www.ibatis.com/dtd/sql-map-2.dtd">
<sqlMap namespace="workflow">

    <typeAlias alias="WorkflowJob"
               type="org.craftercms.cstudio.api.service.workflow.WorkflowJob" />

    <typeAlias alias="WorkflowItem"
               type="org.craftercms.cstudio.api.service.workflow.WorkflowItem" />

    <typeAlias alias="WorkflowJobProperty"
               type="org.craftercms.cstudio.api.service.workflow.WorkflowJobProperty" />

    <typeAlias alias="indexCheckTO"
               type="org.craftercms.cstudio.alfresco.to.TableIndexCheckTO" />

    <cacheModel id="workflowCache" type="LRU" readOnly="false">
        <flushInterval hours="24" />
        <flushOnExecute statement="workflow.updateJob" />
        <flushOnExecute statement="workflow.deleteJob" />
        <flushOnExecute statement="workflow.createJob" />
        <flushOnExecute statement="workflow.updateItem" />
        <flushOnExecute statement="workflow.deleteItem" />
        <flushOnExecute statement="workflow.createItem" />
        <property name="cache-size" value="1000" />
    </cacheModel>

    <!-- ====================================== -->
    <!--           Result Mapping               -->
    <!-- ====================================== -->

    <resultMap id="jobResult" class="WorkflowJob">
        <result property="id" column="id" />
        <result property="site" column="site" />
        <result property="processName" column="process_name" />
        <result property="createDate" column="created_date" />
        <result property="modifiedDate" column="modified_date" />
        <result property="currentStatus" column="state" />
        <result property="items" column="id" javaType="ArrayList"
                select="getItemsByJob" resultMap="itemResult"/>
        <result property="properties" column="id" javaType="HashMap"
                select="getJobProperties" resultMap="jobPropertyResult"/>
        </resultMap>

    <resultMap id="itemResult" class="WorkflowItem">
        <result property="id" column="id" />
        <result property="jobId" column="job_id" />
        <result property="path" column="path" />
        <result property="percentComplete" column="percent_complete" />
    </resultMap>

    <resultMap id="jobPropertyResult" class="WorkflowJobProperty">
        <result property="jobId" column="job_id" />
        <result property="name" column="name" />
        <result property="value" column="value" />
    </resultMap>

    <resultMap id="indexResult" class="indexCheckTO">
        <result property="table" column="Table" />
        <result property="keyName" column="Key_name" />
        <result property="columnName" column="Column_name" />
    </resultMap>

    <select id="checkTableExists" resultClass="java.util.HashMap">
        show tables like 'workflow_job';
    </select>

    <!-- ====================================== -->
    <!--           index statements             -->
    <!-- ====================================== -->

    <insert id="workflowJob.addIdIndex">
        CREATE INDEX workflow_job_idx ON workflow_job (id);
    </insert>

    <insert id="workflowJobProperty.addIdIndex">
        CREATE INDEX workflow_job_property_idx ON workflow_job_property (job_id);
    </insert>

    <insert id="workflowItem.addIdIndex">
        CREATE INDEX workflow_item_idx ON workflow_item (id);
    </insert>

    <select id="workflowJob.checkIdIndex" resultMap="indexResult" cacheModel="workflowCache">
        show index from workflow_job where key_name='workflow_job_idx';
    </select>

    <select id="workflowJobProperty.checkIdIndex" resultMap="indexResult" cacheModel="workflowCache">
        show index from workflow_job_property where key_name='workflow_job_property_idx';
    </select>

    <select id="workflowItem.checkIdIndex" resultMap="indexResult" cacheModel="workflowCache">
        show index from workflow_item where key_name='workflow_item_idx';
    </select>

    <insert id="workflowJob.addStateIndex">
        CREATE INDEX workflow_state_idx ON workflow_job (state);
    </insert>

    <select id="workflowJob.checkStateIndex" resultMap="indexResult" cacheModel="workflowCache">
        show index from workflow_job where Key_name='workflow_state_idx';
    </select>

    <!-- ====================================== -->
    <!--             Job Statements             -->
    <!-- ====================================== -->

    <select id="getJob" parameterClass="String" resultMap="jobResult" cacheModel="workflowCache">
        SELECT id, site, process_name, created_date, modified_date, state
        FROM workflow_job
        WHERE id = #id#;
    </select>

    <select id="getJobsByStates" resultSetType="FORWARD_ONLY"
            resultMap="jobResult" cacheModel="workflowCache"  parameterClass="java.util.Map">
        SELECT id, site, process_name, created_date, modified_date, state
        FROM workflow_job
        <dynamic prepend=" WHERE state IN ">
          <isNotNull property="states">
            <iterate property="states"  open="(" close=")" conjunction=",">
                #states[]#
            </iterate>
          </isNotNull>
        </dynamic>
    </select>

    <update id="updateJob" parameterClass="java.util.Map">
        UPDATE workflow_job
        SET source_language = #sourceLanguage#, 
            target_language = #targetLanguage#, 
            source_site = #sourceSite#, 
            target_site = #targetSite#,
            target_root_path = #targetRootPath#, 
            created_date = #createdDate#, 
            modified_date = #modifiedDate#, 
            state = #state#
        WHERE id = #id#;
    </update>

    <delete id="deleteJob" parameterClass="String">
        DELETE FROM workflow_job
        WHERE id = #id#;
    </delete>

    <insert id="createJob" parameterClass="java.util.Map" >
        INSERT INTO workflow_job
            (source_language, target_language, source_site, target_site, 
            target_root_path, created_date, modified_date, state)
        VALUES
            (#sourceLanguage#, #targetLanguage#, #sourceSite#, #targetSite#, 
            #targetRootPath#, #createdDate#, #modifiedDate#, #state#);
    </insert>

    <!-- ====================================== -->
    <!--      Job properties Statements         -->
    <!-- ====================================== -->

    <select id="getJobProperties" parameterClass="String" resultMap="jobPropertyResult" cacheModel="workflowCache">
        SELECT job_id, name, value
        FROM workflow_job_property
        WHERE job_id = #jobId#;
    </select>

    <insert id="createJobProperty" parameterClass="WorkflowJobProperty" >
        INSERT INTO workflow_job_property
            (job_id, name, value)
        VALUES
            (#jobId#, #name#, #value#);
    </insert>

    <delete id="deleteJobProperties" parameterClass="String">
        DELETE FROM workflow_job_property
        WHERE job_id = #jobId#;
    </delete>

    <!-- ====================================== -->
    <!--            Item Statements             -->
    <!-- ====================================== -->

    <select id="getItem" parameterClass="String" resultMap="jobPropertyResult" cacheModel="workflowCache">
        SELECT id, job_id, path, percent_complete
        FROM workflow_item
        WHERE id = #id#;
    </select>

    <select id="getItemsByJob" parameterClass="String" resultMap="itemResult" cacheModel="workflowCache">
        SELECT id, job_id, path, percent_complete
        FROM workflow_item
        WHERE job_id = #jobId#;
    </select>

    <update id="updateItem" parameterClass="java.util.Map">
        UPDATE workflow_item
        SET job_id = #jobId#, 
            path = #path#, 
            percent_complete = #percentComplete#,
        WHERE id = #id#;
    </update>
    
    <delete id="deleteItem" parameterClass="String">
        DELETE FROM workflow_item
        WHERE id = #id#;
    </delete>

    <insert id="createItem" parameterClass="java.util.Map" >
        INSERT INTO workflow_item
            (id, job_id, path, percent_complete)
        VALUES
            (#id#, #jobId#, #path#, #percentComplete#); 
    </insert>

</sqlMap>
